ggplot(diamonds, aes(x=cut, y=price)) +
geom_bar(stat = "identity",colour = c("red","cyan","blue","green","white")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,vjust = 1,size = 10),
axis.text.y = element_text(angle = 30, hjust = 1,vjust = 1,size = 10))
#--7-2-
ggplot(diamonds, aes(x=cut, y=price)) +
geom_bar(stat = "identity",col = c("red","cyan","blue","green","white")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,vjust = 1,size = 10),
axis.text.y = element_text(angle = 30, hjust = 1,vjust = 1,size = 10))
#--7-2-
ggplot(diamonds, aes(x=cut, y=price)) +
geom_bar(stat = "identity",fill = c("red","cyan","blue","green","white")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,vjust = 1,size = 10),
axis.text.y = element_text(angle = 30, hjust = 1,vjust = 1,size = 10))
#--7-2-
ggplot(diamonds, aes(x=cut, y=price)) +
geom_bar(stat = "identity", col("red","cyan","blue","green","white")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,vjust = 1,size = 10),
axis.text.y = element_text(angle = 30, hjust = 1,vjust = 1,size = 10))
#--7-2-
ggplot(diamonds, aes(x=cut, y=price)) +
geom_bar(stat = "identity", col=c("red","cyan","blue","green","white")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,vjust = 1,size = 10),
axis.text.y = element_text(angle = 30, hjust = 1,vjust = 1,size = 10))
#--7-2-
ggplot(diamonds, aes(x=cut, y=price)) +
geom_bar(stat = "identity", col=rainbow()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,vjust = 1,size = 10),
axis.text.y = element_text(angle = 30, hjust = 1,vjust = 1,size = 10))
#--7-2-
ggplot(diamonds, aes(x=cut, y=price)) +
geom_bar(stat = "identity", col=rainbow(length())) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,vjust = 1,size = 10),
axis.text.y = element_text(angle = 30, hjust = 1,vjust = 1,size = 10))
#--7-2-
ggplot(diamonds, aes(x=cut, y=price)) +
geom_bar(stat = "identity", col=rainbow(length(diamonds))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,vjust = 1,size = 10),
axis.text.y = element_text(angle = 30, hjust = 1,vjust = 1,size = 10))
geom_bar(stat = "identity", fill= "green" +
#--7-2-
ggplot(diamonds, aes(x=cut, y=price)) +
geom_bar(stat = "identity", fill= "green") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,vjust = 1,size = 10),
axis.text.y = element_text(angle = 30, hjust = 1,vjust = 1,size = 10))
d1=diamonds %>%
group_by(cut) %>%
filter(cut, %in% c('Fair','Good','Very Good','Premium','ideal')) %>%
summarise_each(funs(n()))
#--7-2-
ggplot(diamonds, aes(x=cut, y=price)) +
geom_bar(stat = "identity",fill="blue") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,vjust = 1,size = 10),
axis.text.y = element_text(angle = 30, hjust = 1,vjust = 1,size = 10))
#--7-2-
ggplot(diamonds, aes(x=cut, y=price)) +
geom_bar(stat = "identity",fill="green") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,vjust = 1,size = 10),
axis.text.y = element_text(angle = 30, hjust = 1,vjust = 1,size = 10))
blue
#--7-2-
ggplot(diamonds, aes(x=cut, y=price)) +
geom_bar(stat = "identity",fill="blue") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,vjust = 1,colour = "black",size = 10),
axis.text.y = element_text(angle = 30, hjust = 1,vjust = 1,size = 10))
ggplot(mpg2, aes(x = class, y = cty)) + geom_boxplot(fill=c("blue","green","red"))
#--7-2-
ggplot(diamonds, aes(x=cut, y=price)) +
geom_bar(stat = "identity",fill="blue") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,vjust = 1,colour = "black",size = 10),
axis.text.y = element_text(angle = 30, hjust = 1,vjust = 1,size = 10))
#--7-3-
diamonds%>%
select(cut, color, price) %>%
filter(cut,color) %>%
summarise(sum(cut),sum(color))
#--7-3-
diamonds%>%
select(cut, color, price) %>%
filter(cut,color)
d1=diamonds %>%
group_by(cut) %>%
filter(cut, %iin% c('Fair','Good','Very Good','Premium','ideal')) %>%
summarise_each(list(mean),Fair,Good,Very Good,Premium,ideal)
d2=diamonds %>%
summarise_each(list(mean),Fair,Good,Very Good,Premium,ideal)
diamonds
d2 = diamonds %>%
group_by(cut) %>%
mutate(cc=cumsum(color)) # sort 에서 그룹 = 이름 별로 점수르 구해 누적 합을 구함
d2 = diamonds %>%
group_by(cut) %>%
mutate(color+cut)) # sort 에서 그룹 = 이름 별로 점수르 구해 누적 합을 구함
ggplot(score,aes(x=영어,y=reorder(이름,영어))) +
geom_point(size=6)+
theme_bw()+
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "red",linetype = "dashed"))
ggplot(diamonds,aes(x=cut,y=reorder(color,price))) +
geom_point(size=6)+
theme_bw()+
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "red",linetype = "dashed"))
ggplot(score,aes(x=영어,y=reorder(이름,영어))) +
geom_segment(aes(yend=이름),xend=0,color="blue") +  # 라인을 그려주는게 segment
geom_point(size=6, color="green")+
theme_bw()+
theme(panel.grid.major.y = element_blank())
geom_point(size=6, color="green")+
diamonds
ggplot(diamonds,aes(x=cut,y=reorder(color,price))) +
geom_segment(aes(yend=price),xend=0,color="blue")
ggplot(diamonds,aes(x=cut,y=reorder(color,price))) +
geom_segment(aes(yend=price),xend=0,color="blue")
diamonds
ggplot(diamonds,aes(x=cut,y=reorder(color,price))) +
geom_segment(aes(yend=price),xend=0,color="blue")
ggplot(diamonds, aes(x=cut,y=reorder(color,price))) +
geom_segment(aes(yend=price),xend=0,color="blue")
ggplot(economics, aes(x=date, y=psavert))+
geom_line()
ggplot(diamonds, aes(x=cut, y=price))+
geom_line()
ggplot(diamonds, aes(x=price, y=cut))+
geom_line()
geom_point(size=6, color="green")+
theme_bw()+
theme(panel.grid.major.y = element_blank()))
ggplot(diamonds, aes(x=cut, y=reader(price,color))+
geom_line())
d3 = diamonds[,c("price", "color")]
d3
geom_point(size=6, color="green")+
theme_bw()+
theme(panel.grid.major.y = element_blank()))
ggplot(diamonds, aes(x=cut, y=reoder(price,color))+
geom_line())
ggplot(diamonds, aes(x=cut, y=reoder(price,color))) +
geom_line()
d3 = diamonds[,c("price", "color")]
d3
ggplot(diamonds, aes(x=cut, y=reoder(price,color))) +
geom_line()
d3 = diamonds[,c("price", "color")]
ggplot(diamonds, aes(x=cut, y=d3(price,color))) +
geom_line()
ggplot(diamonds, aes(x=cut, y=(price,color))) +
geom_line()
ggplot(diamonds, aes(x=cut, y=[,c(price,color)])) +
geom_line()
ggplot(diamonds, aes(x=cut, y=color)) +
geom_line()
ggplot(diamonds, aes(x=cut,y=reorder(color))) +
geom_segment(aes(yend=price),xend=0,color="blue")
ggplot(diamonds, aes(x=cut,y=color)) +
geom_segment(aes(yend=price),xend=0,color="blue")
ggplot(diamonds,aes(x=cut, y=color)) +
geom_point(size=6)+
theme_bw()+
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "red",linetype = "dashed"))
ggplot(diamonds,aes(x=cut, y=color)) +
theme_bw()+
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "red",linetype = "dashed"))
# -3-
mpg3=mpg %>%
group_by(class) %>%
select(manufacturer,class,cty) %>%
filter(class %in% c('suv')) %>%
summarise_each(funs(n())) %>%
arrange(desc(class))
mpg3
# -3-
mpg3=mpg %>%
group_by(class) %>%
select(mpg,manufacturer,class,cty) %>%
filter(class %in% c('suv')) %>%
summarise_each(funs(n())) %>%
arrange(desc(class))
# -3-
mpg3=mpg %>%
group_by(class) %>%
select(manufacturer,class,cty) %>%
filter(class %in% c('suv')) %>%
summarise_each(funs(n())) %>%
arrange(desc(class))
mpg3
# -3-
mpg3=mpg %>%
group_by(class) %>%
select(manufacturer, class, cty) %>%
filter(class %in% c('suv')) %>%
summarise_each(funs(n())) %>%
arrange(desc(class))
mpg3
# -3-
mpg3=mpg %>%
group_by(manufacturer) %>%
select(manufacturer, class, cty) %>%
filter(class %in% c('suv')) %>%
summarise_each(funs(n())) %>%
arrange(desc(class))
mpg3
library(dplyr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
```{r}
ggplot(mpg, aes(x=cty, y=hwy)) + geom_point()
ggplot(mpg, aes(x=cty, y=hwy)) + geom_point()
ggplot(mpg, aes(x=cty, y=hwy)) + geom_point()
```{r mpg}
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point()
mpg3
mpg3=mpg %>%
group_by(manufacturer) %>%
select(manufacturer, class, cty) %>%
filter(class %in% c('suv')) %>%
summarise_each(funs(n())) %>%
arrange(desc(class))
mpg3
mpg1=mpg %>%
group_by(model) %>%
select(model,class) %>%
filter(class %in% c('suv')) %>%
summarise_each(funs(n())) %>%
arrange(desc(class))
mpg1
ggplot(mpg1,aes(x=model, y=class)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,vjust = 1,colour = "black",size = 10))
economics
ggplot(economics, aes(x=date, y=psavert))+
geom_line()
# --6--
mpg
mpg2 = mpg %>%
group_by(class) %>%
select(cty,class) %>%
filter(class %in% c('compact','subcompact','suv'))
mpg2
ggplot(economics, aes(x=date, y=psavert))+
geom_line()
ggplot(mpg, aes(x=cty, y=hwy)) + geom_point()
ggplot(mpg, aes(x=cty, y=hwy)) + geom_point()
#-4-
mpg1=mpg %>%
group_by(model) %>%
select(model,class) %>%
filter(class %in% c('suv')) %>%
summarise_each(funs(n())) %>%
arrange(desc(class))
mpg1
ggplot(mpg1,aes(x=model, y=class)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,vjust = 1,colour = "black",size = 10))
ggplot(mpg1,aes(x=model, y=class)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,vjust = 1,colour = "black",size = 10)) +
limit(5)
mpg3=mpg %>%
group_by(manufacturer) %>%
select(manufacturer, class, cty) %>%
filter(class %in% c('suv')) %>%
summarise_each(funs(n())) %>%
arrange(desc(mean_cty)) %>%
head(5)
mpg3=mpg %>%
group_by(manufacturer) %>%
select(manufacturer, class, cty) %>%
filter(class %in% c('suv')) %>%
summarise(mean_cty =mean(cty)) %>%
arrange(desc(mean_cty)) %>%
head(5)
mpg3=mpg %>%
group_by(manufacturer) %>%
select(manufacturer, class, cty) %>%
filter(class %in% c('suv')) %>%
summarise(mean_cty =mean(cty)) %>%
arrange(desc(mean_cty)) %>%
head(5)
mpg3
ggplot(mpg3, aes(x=manufacturer, y=cty)) + geom_bar()
ggplot(mpg1,aes(x=model, y=class)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,vjust = 1,colour = "black",size = 10)) +
#---5--
economics
ggplot(economics, aes(x=date, y=psavert))+
geom_line()
# --6--
mpg
mpg2 = mpg %>%
group_by(class) %>%
select(cty,class) %>%
filter(class %in% c('compact','subcompact','suv'))
mpg2
ggplot(mpg2, aes(x = class, y = cty)) + geom_boxplot(fill=c("blue","green","red"))
mpg2 = mpg %>%
group_by(class) %>%
select(cty,class) %>%
filter(class %in% c('compact','subcompact','suv'))
mpg2
ggplot(economics, aes(x=date, y=psavert))+
geom_line()
# --6--
mpg
mpg2 = mpg %>%
group_by(class) %>%
select(cty,class) %>%
filter(class %in% c('compact','subcompact','suv'))
mpg2
ggplot(mpg2, aes(x = class, y = cty)) + geom_boxplot(fill=c("blue","green","red"))
ggplot(diamonds, aes(x=cut, fill=cut)) +
geom.bar()
ggplot(diamonds, aes(x=cut, fill=cut)) +
geom.bar()
ggplot(diamonds, aes(x=cut, fill=cut)) +
geom_bar()
#--7-2-
ggplot(diamonds, aes(x=cut, y=price)) +
geom_bar(stat = "identity",fill="blue") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,vjust = 1,colour = "black",size = 10),
axis.text.y = element_text(angle = 30, hjust = 1,vjust = 1,size = 10))
dd= diamonds %>%
group_by(cut) %>%
summarise(mean_price = mean(price))
ggplot(dd, aes(x=cut, y=mean_price, fill=cut)) +
geom_col()
ggplot(diamonds, aes(x=price)) +
goem_histogram(bins=10) +
facet_wrap(cut)
knitr::opts_chunk$set(echo = TRUE)
```{r}
knitr::opts_chunk$set(echo = TRUE)
```{r}
knitr::opts_chunk$set(echo = TRUE)
```{r mpg}
knitr::opts_chunk$set(echo = TRUE)
```{r mpg}
```{r mpg}
library(dplyr)
library(dplyr)
library(ggplot2)
library(dplyr)
library(dplyr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
```{r mpg}
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
```{r mpg}
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
ggplot(mpg, aes(x=cty, y=hwy))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
ggplot(mpg, aes(x=cty, y=hwy)) +
geom_point(size=2, color='red') +
ggtitle('mpg 데이터 cty(도시연비)와 hwy(고속도로연비) 산점도')
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
ggplot(mpg, aes(x=cty, y=hwy)) +
ggtitle('mpg 데이터 cty(도시연비)와 hwy(고속도로연비) 산점도')
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
ggplot(mpg, aes(x=cty, y=hwy)) +
geom_point(size=3, color='blue') +
ggtitle('cty와hwy산점도')
library(rJaba)
library(rJava)
library(RColorBrewer)
library(KoNLP)
library(stringr)
library(KoNLP)
usersejongDic
userSejongDic
userSejongDic()
useSejongDic()
library(rJava)
library(RColorBrewer)
library(KoNLP)
library(stringr)
useSejongDic()
library(KoNLP)
data1= readLines("응답소_2015_01.txt")
setwd("D:/workspace/R_date/Part2")
library(rJava)
library(RColorBrewer)
library(KoNLP)
library(stringr)
data1= readLines("응답소_2015_01.txt")
data2 = sapply(data1, extractNoun, USE.NAMES = F)
data3 = unlist(data2)
data3= Filter(function(x) {nchar(x) >= 2}, data3)
head(unlist(data3),30)
data3 = str_replace_all(cdata, "[^[:alpha:]]", "")
data3 = gsub("\\='","",data3)
data3 = gsub("\\'","",data3)
data3 = gsub("\\.","",data3)
data3 = gsub("\\d+","",data3)
data3 = gsub("[ㄱ-ㅎ]","",data3)
data3 = gsub("(ㅜ|ㅠ)","",data3)
data3 = gsub("[0-9]","",data3)
data3 = gsub("[a-z]","",data3)
data3 = gsub("[A-Z]","",data3)
data3 = gsub(" ","",data3)
data3 = gsub("Q","",data3)
data3 = gsub("","",data3)
data3 = gsub("제목","",data3)
data3 = gsub("아니고","",data3)
data3 = gsub("서울시","",data3)
data3 = gsub("서울","",data3)
data3 = gsub("애완견","",data3)
data3 = gsub("목줄","",data3)
write(unlist(data3), "응답소gsub_01.txt")
data4=read.table("응답소gsub_01.txt")
nrow(data4)
wordcount = table(data4)
wordcount
0
palete = brewer.pal(10, "Set2")
wordcloud(names(wordcount),freq=wordcount,scale=c(6,1),rot.per=0.25,min.freq=1,
random.order=F,random.color=T,colors=palete)
data3 = unlist(data2)
data3= Filter(function(x) {nchar(x) >= 2}, data3)
head(unlist(data3),30)
data3 = str_replace_all(cdata, "[^[:alpha:]]", "")
data3 = gsub("\\='","",data3)
data3 = gsub("\\'","",data3)
data3 = gsub("\\.","",data3)
data3 = gsub("\\d+","",data3)
data3 = gsub("[ㄱ-ㅎ]","",data3)
data3 = gsub("(ㅜ|ㅠ)","",data3)
data3 = gsub("[0-9]","",data3)
data3 = gsub("[a-z]","",data3)
data3 = gsub("[A-Z]","",data3)
data3 = gsub(" ","",data3)
data3 = gsub("Q","",data3)
data3 = gsub("","",data3)
data3 = gsub("제목","",data3)
data3 = gsub("아니고","",data3)
data3 = gsub("서울시","",data3)
data3 = gsub("서울","",data3)
data3 = gsub("애완견","",data3)
data3 = gsub("목줄","",data3)
write(unlist(data3), "응답소gsub_01.txt")
data4=read.table("응답소gsub_01.txt")
nrow(data4)
wordcount = table(data4)
wordcount
0
palete = brewer.pal(10, "Set2")
wordcloud(names(wordcount),freq=wordcount,scale=c(6,1),rot.per=0.25,min.freq=1,
random.order=F,random.color=T,colors=palete)
wordcount = table(data4)
palete = brewer.pal(9, "Set2")
write(unlist(data3), "응답소gsub_01.txt")
data4=read.table("응답소gsub_01.txt")
data1= readLines("응답소_2015_01.txt")
data2 = sapply(data1, extractNoun, USE.NAMES = F)
ibrary(rJava)
library(RColorBrewer)
library(KoNLP)
library(stringr)
useSejongDic()
data1= readLines("응답소_2015_01.txt")
data2 = sapply(data1, extractNoun, USE.NAMES = F)
data3 = unlist(data2)
data3= Filter(function(x) {nchar(x) >= 2}, data3)
head(unlist(data3),30)
data3 = str_replace_all(cdata, "[^[:alpha:]]", "")
data3 = gsub("\\='","",data3)
data3 = gsub("\\'","",data3)
data3 = gsub("\\.","",data3)
data3 = gsub("\\d+","",data3)
data3 = gsub("[ㄱ-ㅎ]","",data3)
data3 = gsub("(ㅜ|ㅠ)","",data3)
data3 = gsub("[0-9]","",data3)
data3 = gsub("[a-z]","",data3)
data3 = gsub("[A-Z]","",data3)
data3 = gsub(" ","",data3)
data3 = gsub("Q","",data3)
data3 = gsub("","",data3)
data3 = gsub("제목","",data3)
data3 = gsub("아니고","",data3)
data3 = gsub("서울시","",data3)
data3 = gsub("서울","",data3)
data3 = gsub("애완견","",data3)
data3 = gsub("목줄","",data3)
write(unlist(data3), "응답소gsub_01.txt")
data4=read.table("응답소gsub_01.txt")
nrow(data4)
wordcount = table(data4)
palete = brewer.pal(9, "Set3")
wordcloud(names(wordcount),freq=wordcount,scale=c(1,1),rot.per=0.25,min.freq=1,
random.order=F,random.color=T,colors=palete)
