library(prob)
install.packages("prob")
source('~/22.이젠/33.R 통계분석/source/Chapter05/source/03.pro.est.R', echo=TRUE)
library(prob)
n <- 3
smps.all <- rolldie(n)
str( smps.all )
head( smps.all, n=3 )
is.even <- function(x) return(!x%%2)
var.p <- function(x) {
return( sum((x-mean(x))^2 / length(x))  )
}
p.even <- function(x, s.size=3) {
return( sum(is.even(x)) / s.size )
}
phat <- apply(smps.all, 1, p.even)
mean(phat)
( p.p <- 0.5 )
var.p(phat)
( p.p*(1-p.p)/3 )
var.p(phat)
( p.p*(1-p.p)/3 )
sqrt(var.p(phat))
par(mar=c(0,1,0,1))
x <- seq(-3, 3, by=0.01)
y <- dnorm(x)
plot(x, y, axes=F, type="l", ylim=c(-0.1, 0.5), xlab="", ylab="")
abline(h=0)
ll <- qnorm(0.025)
ul <- qnorm(0.975)
polygon(c(-3, x[x<ll], ll), c(0, y[x<ll], 0), density=20)
polygon(c(ul, x[x>ul], 3), c(0, y[x>ul], 0), density=20, angle=135)
text(0, 0.2, expression(1-alpha))
text(-2.5, 0.1, expression(plain(P)(Z<z) == over(alpha, 2)), cex=0.7)
text(2.5, 0.1, expression(plain(P)(Z>z) == over(alpha, 2)), cex=0.7)
text(-1.96, -0.02, expression(-z[over(alpha, 2)]), cex=0.8)
text(1.96, -0.02, expression(z[over(alpha, 2)]), cex=0.8)
set.seed(9)
n <- 10
x <- 1:100
y <- seq(-3, 3, by=0.01)
smps <- matrix(rnorm(n * length(x)), ncol=n)
xbar <- apply(smps, 1, mean)
se <- 1 / sqrt(10)
alpha <- 0.05
z <- qnorm(1 - alpha/2)
ll <- xbar - z * se
ul <- xbar + z * se
plot(y, type="n", xlab="표본추출", ylab="z", xlim=c(1, 100), ylim=c(-1.5, 1.5), cex.lab=1.8)
abline(h=0, col="red", lwd=2, lty=2)
l.c <- rep(NA, length(x))
l.c <- ifelse(ll * ul > 0, "red", "black")
arrows(1:length(x), ll, 1:length(x), ul, code=3, angle=90, length=0.02, col=l.c, lwd=1.5)
head(smps)
head(xbar)
z
ll <- xbar - z * se
ul <- xbar + z * se
ll; ul
head(ll); head(ul)
ci.t <- function(x, alpha=0.05) {
n <- length(smp)
m <- mean(x)
s <- sd(x)
t <- qt(1-(alpha/2), df=n-1)
ll <- m - t * (s / sqrt(n))
ul <- m + t * (s / sqrt(n))
ci <- c(1-alpha, ll, m, ul)
names(ci) <- c("Confidence Level", "Lower limit", "Mean", "Upper limit")
return( ci )
}
smp <- c(520, 498, 481, 512, 515, 542, 520, 518, 527, 526)
ci.t(smp)
ci.t(smp, 0.1)
str(mpg)
library(dplyr)
str(mpg)
?mpg
??mpg
library(ggplot2)
str(mpg)
table(mpg$class)
table(mpg$fl)
table(mpg$cyl)
str(mpg)
table(mpg$drv)
m <- mpg %>% filter(drv %in% c("f", "r"))
table(m$drv)
table(m$class)
mm <- m %>% filter(class == "midsize")
table(mm$drv)
mm <- m %>% filter(class == "compact")
table(mm$drv)
mm <- m %>% filter(class == "subcompact")
table(mm$drv)
str(mtcars)
str(iris)
head(state.x77)
states <- as.data.frame(state.x77[,c("Murder","Population","Illiteracy","Income","Frost")])
fit <- lm(Murder ~ Population+Illiteracy+Income+Frost, data=states)
install.packages("car")
library(car)
vif(fit)
sqrt(vif(fit))
# 이상 관측치
influencePlot(fit, id.method = "identify")
summary(fit)
par(mfrow=c(2,2))
plot(fit)
par(mfrow=c(1,1))
fit1 <- lm(Murder ~ ., data=states)
summary(fit1)
fit2 <- lm(Murder ~ Population+Illiteracy, data=states)
summary(fit2)
# AIC
AIC(fit1, fit2)
f <- c(150, 160, 170, 180, 190)
s <- c(176, 179, 182, 178, 185)
fit <- lm(s~f)
summary(fit)
plot(s, f)
plot(f, s)
abline(fit)
abline(fit, col="red", lwd=2)
s <- c(176, 179, 182, 182, 185)
plot(f, s)
fit <- lm(s~f)
fit <- lm(s~f)
summary(fit)
abline(fit, col="red", lwd=2)
s <- c(176, 179, 182, 181, 185)
plot(f, s)
fit <- lm(s~f)
summary(fit)
abline(fit, col="red", lwd=2)
f <- c(100, 200, 300, 400, 500)
s <- c(30, 57, 76, 140, 197)
plot(f, s)
fit <- lm(s~f)
summary(fit)
abline(fit, col="red", lwd=2)
s <- c(30, 60, 76, 140, 197)
plot(f, s)
fit <- lm(s~f)
summary(fit)
abline(fit, col="red", lwd=2)
s <- c(30, 70, 85, 140, 197)
plot(f, s)
fit <- lm(s~f)
summary(fit)
abline(fit, col="red", lwd=2)
mtcars
plot(disp~hp, data=mtcars)
plot(hp~disp, data=mtcars)
fit <- lm(hp~disp, data=mtcars)
summary(fit)
abline(fit, col="red", lwd=2)
par(mfrow=c(2,2))
plot(fit)
Sys.Date()
Sys.Time()
Sys.time()
date()
as.Date('2014-11-01')
as.Date("2014/11/01")
as.Date("01-11-2014")
as.Date("01-11-2014",format="%d-%m-%Y")
as.Date("01-11-2014",format="%d년 %m월 %Y일")
as.Date("2014년 11월 1일",format="%Y년 %m월  %d일")
as.Date(10,origin="2014-11-10")
as.Date("2014-11-30") - as.Date("2014-11-01")
as.POSIXct("2014-11-01 20:00:00") - as.POSIXct("2014-11-01 18:30:30")
install.packages("lubridate")
library(lubridate)
date <- now( )
date
month(date,label=T)
month(date,label=F)
month(date,label=T)
day(date)
wday(date,label=T)
wday(date,label=F)
var4 <- c("a","b","c")
class(var4)
12->var1
var1
string1 <- "Very Easy R Programming"
class(string1)
comp <- c(1,"2")
class(comp)
comp
seq1 <- 1:5
seq1
date1 <- seq(from=as.Date('2014-01-01'),to=as.Date('2014-01-31'),by=1)
date1
objects()
rm(list=ls( ))
objects()
c(1,2,3,4,"5")
vec1<-c(1,2,3,4,"5")
vec1[3]
vec1[-3]
vec1[1:(length(vec1)-2)]
vec1[-1:-3]
vec1[9] <- 9
vec1
append(vec1,10,after=3)
append(vec1,11,after=0)
c(1,2,3) + c(4,5,6)
(10,20,30)
fruits <- c(10,20,30)
names(fruits) <- c('apple','banana','peach')
fruits
var5 <- seq(1,5) ; var5
var7 <- seq(1,10,2) ; var7
var8 <- rep(1:3,2) ; var8
3 %in% var7
4 %in% var7
date4 <- seq(from=as.Date('2015-01-01'),to=as.Date('2015-01-31'),by=1);date4
mat1 <- matrix(c(1,2,3,4))
mat1
mat2 <- matrix(c(1,2,3,4),nrow=2); mat2
mat3 <- matrix(c(1,2,3,4),nrow=2,byrow=T);mat3
,7,8,9),nrow=3,byrow=T);mat4
mat4 <- matrix(c(1,2,3
,4,5,6
,7,8,9),nrow=3,byrow=T);mat4
mat4 <- rbind(mat4,c(11,12,13)) ;mat4
array1 <- array(c(1:12), dim=c(4,3))
array1
array2 <- array(c(1:12), dim=c(2,2,3))  ;array2
list1 <- list(name='James Seo' ,address='Seoul' ,tel='010-8706-4712',pay=500);list1
list1[1:2]
list1$birth  <- '1975-10-23'
list1
class(list1$birth)
list1$birth  <- as.Date('1975-10-23')
class(list1$birth)
list1$name <- c('Seojinsu','James Seo')
list1$name
no <- c(1,2,3,4)
name <- c('Apple','Peach','Banana','Grape')
price <- c(500,200,100,50)
qty <- c(5,2,4,7)
sales <- data.frame(NO=no,NAME=name,PRICE=price,QTY=qty)
sales
sales2 <- matrix(c(1,'Apple',500,5,
2,'Peach',200,2,
3,'Banana',100,4,
4,'Grape',50,7),nrow=4,byrow=T)
sales2
df1 <- data.frame(sales2)
df1
df1 <- data.frame(sales2)
df1
names(df1) <- c('NO','NAME','PRICE','QTY')
df1
subset(df1,qty<5)
no <- c(1,2,3,4,5)
name <- c("서진수","주시현","최경우","이동근","윤정웅")
address <- c("서울","대전","포항","경주","경기")
tel <- c(1111,2222,3333,4444,5555)
hobby <- c("독서","미술","놀고먹기","먹고놀기","노는애감시하기")
member <- data.frame(NO=no,NAME=name,ADDRESS=address,TEL=tel,HOBBY=hobby)
member
subset(member,select=c(NO,NAME,TEL))
subset(member,select= -TEL)
member3<-subset(member,select= -TEL)
colnames(member3) <- c("번호","이름","주소","취미")
member3
member
ncol(member)
View(member)
nrow(member)
names(member)
rownames(member)
colnames(member)
member[c(1,2,3,4,5)]
member[c(1,2,3,4,5),]
install.packages("extrafont")
setwd('D:/Workspace/R_Data_Analysis/Part2/Stage4_MapData')
install.packages("ggmap")
library(ggmap)
library(stringr)
loc <- read.csv("서울_강동구_공영주차장_위경도.csv",header=T)
loc
kd <- get_map("Amsa-dong",zoom=13, maptype = "roadmap")
install.packages(c("ggiraphExtra", "gridExtra", "tmap"))
library(ggiraphExtra)
head(USArrests)
tail(USArrests)
View(USArrests)
str(USArrests)
library(tibble)
crime <- rownames_to_column(USArrests, var="state")
crime
crime$state <- tolower(crime$state)
crime
str(crime)
states_map <- map_data("state")
library(ggplot2)
states_map <- map_data("state")
install.packages("maps")
states_map <- map_data("state")
str(states_map)
install.packages("mapproj")
windowsFonts()
windowsFonts(malgun = "맑은 고딕")
windowsFonts()
theme_update(text = element_text(family = "malgun"))
library(gridExtra)
m <-ggChoropleth(data = crime,
aes(fill = Murder, map_id = state),
map = states_map) +
ggtitle("미국 주별 살인범죄 분포","(단위: 인구 10만명당 건수)") +
xlab("경도") +
ylab("위도") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"),
plot.subtitle = element_text(hjust = 1.0))
r <- ggChoropleth(data = crime,
aes(fill = Rape, map_id = state),
map = states_map) +
ggtitle("미국 주별 강간범죄 분포","(단위: 인구 10만명당 건수)") +
xlab("경도") +
ylab("위도") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"),
plot.subtitle = element_text(hjust = 1.0))
a <- ggChoropleth(data = crime,
aes(fill = Assault, map_id = state),
map = states_map) +
ggtitle("미국 주별 강도범죄 분포","(단위: 인구 10만명당 건수)") +
xlab("경도") +
ylab("위도") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"),
plot.subtitle = element_text(hjust = 1.0))
u <- ggChoropleth(data = crime,
aes(fill = UrbanPop, map_id = state),
map = states_map) +
ggtitle("미국 주별 도시비율 분포") +
xlab("경도") +
ylab("위도") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
windows()
grid.arrange(m, r, a, u, ncol=2)
ggChoropleth(data = crime,
aes(fill = Murder, map_id = state),
map = states_map,
interactive = T)
install.packages("stringi")
install.packages("stringi")
install.packages("stringi")
install.packages("stringi")
install.packages("devtools")
devtools::install_github("cardiomoon/kormaps2014")
library(kormaps2014)
str(changeCode(korpop1))
library(dplyr)
korpop1 <- rename(korpop1,
pop = 총인구_명,
name = 행정구역별_읍면동)
str(changeCode(kormap1))
ggChoropleth(data = korpop1,
aes(fill = pop, map_id = code, tooltip = name),
map = kormap1) +
ggtitle("우리나라 광역시,도별 인구 분포") +
xlab("경도") +
ylab("위도") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
library(ggiraphExtra)
library(ggplot2)
ggChoropleth(data = korpop1,
aes(fill = pop, map_id = code, tooltip = name),
map = kormap1) +
ggtitle("우리나라 광역시,도별 인구 분포") +
xlab("경도") +
ylab("위도") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
ggChoropleth(data = korpop1,
aes(fill = pop, map_id = code, tooltip = name),
map = kormap1,
interactive = T)
str(changeCode(tbc))
ggChoropleth(data = tbc,
aes(fill = NewPts, map_id = code, tooltip = name),
map = kormap1,
interactive = T)
devtools::install_github("cardiomoon/Kormaps")
require(Kormaps)
require(tmap)
qtm(kormap1)
qtm(kormap1)
remove.packages("rdgal")
install.packages("rdgal")
qtm(kormap1)
